name: Create and publish the Docker image for Obstracts Web Production

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}_obstracts_web_production

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment: obstracts_web_production
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.deploy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            AUTH0_LOGIN_DOMAIN=auth.dogesec.com
            AUTH0_DOMAIN=dogesec-production.eu.auth0.com
            AUTH0_CLIENT_ID=nGpXXDli5rahMby50wVcbJZ474Tw9jsT
            AUTH0_WEB_CLIENT_ID=l0NalKex2IMpjNji2lNCa3moPDegDgRM
            AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}
            AUTH0_WEB_CLIENT_SECRET=${{ secrets.AUTH0_WEB_CLIENT_SECRET }}
            FRONTEND_BASE_URL=https://app.obstracts.com
            SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
            CSRF_TRUSTED_ORIGINS=https://management.obstracts.com
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            STRIPE_LIVE_MODE=true
            STRIPE_PUBLIC_KEY=pk_live_51QHPQhCl5fFMWEhT8HuBIcZ0NP1BSwOW2IPkuvWKeoQoC6Jn0roexBsygvj5TAKe1TBg6bq4RWSSGqwe5WojfCo900hYmyGCzC
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true