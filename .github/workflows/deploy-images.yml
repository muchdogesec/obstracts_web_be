name: Create and publish Docker images for Obstracts Web

description: This workflow builds and pushes Docker images for staging and production environments when changes are pushed to respective branches.

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix:
        environment:
          - name: staging
            branch: refs/heads/main
            environment: obstracts_web_staging
            image_suffix: _obstracts_web_staging
            auth0_domain: 'dogesec-staging.eu.auth0.com'
            auth0_login_domain: 'auth.signalscorps.com'
            auth0_client_id: 'WH917SKYM44IYxub2lwDo8we8ORrpgIl'
            auth0_web_client_id: 'CL4ZKsUzNaS8s1F1Rh5dNflPqGhdhh7n'
            frontend_base_url: 'https://app.obstracts.staging.signalscorps.com'
            csrf_trusted_origins: 'https://management.obstracts.staging.signalscorps.com'
            default_stripe_price_id: price_1QPAjWCl5fFMWEhTN4p4P6N2
            stripe_public_key:
          - name: production
            branch: refs/heads/main
            environment: obstracts_web_production
            image_suffix: _obstracts_web_production
            auth0_domain: 'dogesec-production.eu.auth0.com'
            auth0_login_domain: 'auth.dogesec.com'
            auth0_client_id: 'nGpXXDli5rahMby50wVcbJZ474Tw9jsT'
            auth0_web_client_id: 'l0NalKex2IMpjNji2lNCa3moPDegDgRM'
            frontend_base_url: 'https://app.obstracts.com'
            csrf_trusted_origins: 'https://management.obstracts.com'
            default_stripe_price_id: price_1QRtxaCl5fFMWEhTxYUy4B4A
            stripe_public_key: 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}${{ matrix.environment.image_suffix }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.deploy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          visibility: private
          build-args: |
            AUTH0_LOGIN_DOMAIN=${{ matrix.environment.auth0_login_domain }}
            AUTH0_DOMAIN=${{ matrix.environment.auth0_domain }}
            AUTH0_CLIENT_ID=${{ matrix.environment.auth0_client_id }}
            AUTH0_WEB_CLIENT_ID=${{ matrix.environment.auth0_web_client_id }}
            AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}
            AUTH0_WEB_CLIENT_SECRET=${{ secrets.AUTH0_WEB_CLIENT_SECRET }}
            FRONTEND_BASE_URL=${{ matrix.environment.frontend_base_url }}
            SMTP_USERNAME=${{ matrix.environment.smtp_username }}
            SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
            STRIPE_TEST_SECRET_KEY=${{ secrets.STRIPE_TEST_SECRET_KEY }}
            STRIPE_PUBLIC_KEY=${{ matrix.environment.stripe_public_key }}
            CSRF_TRUSTED_ORIGINS=${{ matrix.environment.csrf_trusted_origins }}
            POSTGRES_PASSWORD=$${{ secrets.POSTGRES_PASSWORD }}
            DEFAULT_STRIPE_PRICE_ID=${{ matrix.environment.default_stripe_price_id }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}${{ matrix.environment.image_suffix }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true